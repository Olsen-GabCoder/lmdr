<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="?attr/colorOnBackground"
    tools:context=".ui.cropper.CropperActivity">

    <!-- JUSTIFICATION : Une AppBarLayout avec une Toolbar est ajoutée pour fournir un
         contexte à l'utilisateur (un titre) et un point d'ancrage pour les actions,
         notamment le bouton de validation du recadrage. -->
    <com.google.android.material.appbar.AppBarLayout
        android:id="@+id/app_bar_layout"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent">

        <com.google.android.material.appbar.MaterialToolbar
            android:id="@+id/toolbar"
            android:layout_width="match_parent"
            android:layout_height="?attr/actionBarSize"
            app:title="@string/title_crop_image"
            app:navigationIcon="@drawable/ic_close" />

    </com.google.android.material.appbar.AppBarLayout>

    <!-- JUSTIFICATION : UCropView est le composant principal de la librairie uCrop.
         Il est responsable de l'affichage de l'image, de la grille de recadrage
         et de la gestion des gestes de l'utilisateur (zoom, déplacement, rotation).
         C'est le cœur de notre interface de recadrage. -->
    <com.yalantis.ucrop.view.UCropView
        android:id="@+id/ucrop_view"
        android:layout_width="0dp"
        android:layout_height="0dp"
        app:layout_constraintTop_toBottomOf="@id/app_bar_layout"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <!-- JUSTIFICATION : Une ProgressBar est ajoutée pour fournir un retour visuel
         à l'utilisateur pendant que l'image est en cours de traitement après validation.
         Elle est initialement masquée. -->
    <ProgressBar
        android:id="@+id/progress_bar"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:visibility="gone"
        tools:visibility="visible"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

</androidx.constraintlayout.widget.ConstraintLayout>